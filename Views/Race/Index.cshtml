@model IEnumerable<HorseRacing.Models.Race>

@{
    ViewBag.Title = "Race Betting";
}

<style>
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    h2 {
        margin-top: 20px;
        color: #333;
    }

    .tabs {
        display: flex;
        justify-content: center;
        margin-bottom: 10px;
        clear: both;
    }

    .tab {
        padding: 10px 20px;
        cursor: pointer;
        background-color: #f1f1f1;
        border: 1px solid #ccc;
        border-radius: 5px 5px 0 0;
        margin-right: 5px;
        text-align: center;
    }

        .tab.active {
            background-color: #fff;
            border-bottom: 1px solid #fff;
        }

    .tab-content {
        display: none;
        padding: 20px;
        border: 1px solid #ccc;
        background-color: #fff;
        border-radius: 0 5px 5px 5px;
    }

        .tab-content.active {
            width: 65%;
            display: block;
        }

    .race-time {
        font-size: 15px;
        color: darkorange;
    }

    .main-content {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        position: relative;
    }

    .side-card {
        width: 60%;
        max-width: 250px;
        height: 300px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin: 0px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        position: relative;
        top: 0;
    }

        .side-card.left {
            left: -25px;
            width: 500px;
            background-color: #Dcdcdc;
            border-radius: 8px;
            margin: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 10px;
            background-color: #Dcdcdc;
            border-radius: 8px;
        }

        .side-card.right {
            right: -25px;
            width: 500px;
            background-color: #Dcdcdc;
            border-radius: 8px;
            margin: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 10px;
            color: #f8f9fa;
            max-height: 80vh;
            overflow-y: auto;
        }

    .race-table {
        width: 100%;
        max-width: 1400px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .race-card {
        width: 95%;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin: 10px 0;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
    }

    .race-header {
        padding: 10px;
        background-color: #f1f1f1;
        border-bottom: 1px solid #ddd;
        display: flex;
        justify-content: space-between;
    }

    .race-location {
        font-weight: bold;
        color: #555;
    }

    .race-body {
        padding: 10px;
    }

    .horse-row {
        display: flex;
        justify-content: space-between;
        padding: 5px 0;
        border-bottom: 1px solid #ddd;
        flex-wrap: wrap;
        align-items: center;
    }

    .horse-name {
        font-weight: bold;
        color: #333;
        flex: 1 1 150px;
    }

    .horse-odds {
        color: #777;
        flex: 1 1 100px;
        text-align: right;
    }

    .bet-options {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex: 1 1 400px;
    }

    .bet-option {
        background-color: #E0E0E0;
        border-radius: 5px;
        padding: 6px;
        margin: 5px;
        color: black;
        text-decoration: none;
        flex: 1;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .bet-option:hover {
            background-color: #FECB98;
            color: black;
        }

        .bet-option.disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

    .bet-odds {
        color: darkorange;
        font-weight: bold;
        text-align: right;
        flex: 1;
    }

    .bet-description {
        margin-left: 10px;
        text-align: left;
        flex: 1;
    }




    .bet-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        background-color: #f3f4f9;
        padding: 10px;
        border-radius: 5px;
        color: black; /* Kolor pomarańczowy */
        position: relative; /* Dodaj to */
    }

        .bet-item .bet-details {
            display: flex;
            flex-direction: column;
        }

        .bet-item .bet-odds {
            font-weight: bold;
            text-align: right;
            margin-left: 10px;
        }

    .betting-controls {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
    }

    .bet-amount-input {
        width: 49%;
        padding: 8px;
        border: none;
        border-radius: 5px;
        font-size: 12px;
        font-weight: bold;
        text-align: center;
    }

    .place-bet-button {
        width: 49%;
        background-color: orange;
        border: none;
        color: #fff;
        font-weight: bold;
        padding: 8px;
        border-radius: 5px;
        cursor: pointer;
        text-align: center;
        font-size: 12px;
    }

        .place-bet-button:hover {
            background-color: #FECB98; /* Ciemniejszy pomarańczowy */
        }

    .trash-icon {
        width: 18px;
        height: 18px;
        cursor: pointer;
        position: absolute;
        right: 10px;
        bottom: 10px;
    }

    .simulate-race-button {
        background-color: orange;
        border: none;
        color: #fff;
        font-weight: bold;
        padding: 8px;
        border-radius: 5px;
        cursor: pointer;
        text-align: center;
        font-size: 15px;
    }

        .simulate-race-button:hover {
            background-color: #FECB98; /* Ciemniejszy pomarańczowy */
        }

</style>

<h2 class="text-center">Race Betting</h2>

<div class="tabs">
    <div class="tab active" data-tab="1">
        Del Mar, California
    </div>
    <div class="tab" data-tab="2">
        Del Mar, California
    </div>
    <div class="tab" data-tab="3">
        Del Mar, California
    </div>
</div>

<div class="main-content">
    <div class="side-card left"></div>

    <div id="tab-1" class="tab-content active" data-tab="1" onclick="selectTab(1)">
        <div class="race-table">
            @foreach (var race in Model.Where(r => r.RaceId == 1))
            {
                <div class="race-card">
                    <div class="race-header">
                        <div class="race-location">
                            <span>@race.Horses.Count</span>
                            <img src="https://static.thenounproject.com/png/1324978-200.png" style="width:20px; height:20px;">

                            <button id="simulate-button-@race.RaceId" class="simulate-race-button" onclick="startSimulation(@race.RaceId, 1)">Simulate Race</button>
                            <span id="countdown-@race.RaceId" class="countdown-timer"></span>
                        </div>
                    </div>
                    <div class="race-body">
                        @foreach (var horse in race.Horses)
                        {
                            <div class="horse-row">
                                <div class="horse-name">@horse.Name</div>
                                <div class="bet-options">
                                    <a href="#" class="bet-option" data-horse="@horse.Name" data-odds="@horse.WinnerOdds" data-bettype="Winner">
                                        <span class="bet-description">Winner</span>
                                        <span class="bet-odds" id="winner-odds-@race.RaceId-@horse.HorseId">@horse.WinnerOdds</span>
                                    </a>
                                    <a href="#" class="bet-option" data-horse="@horse.Name" data-odds="@horse.OtherOdds" data-bettype="1-3">
                                        <span class="bet-description">1-3</span>
                                        <span class="bet-odds" id="other-odds-@race.RaceId-@horse.HorseId">@horse.OtherOdds</span>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="tab-2" class="tab-content" data-tab="2" onclick="selectTab(2)">
        <div class="race-table">
            @foreach (var race in Model.Where(r => r.RaceId == 2))
            {
                <div class="race-card">
                    <div class="race-header">
                        <div class="race-location">
                            <span>@race.Horses.Count</span>
                            <img src="https://static.thenounproject.com/png/1324978-200.png" style="width:20px; height:20px;">
                            <button id="simulate-button-@race.RaceId" class="simulate-race-button" onclick="startSimulation(@race.RaceId, 2)">Simulate Race</button>
                            <span id="countdown-@race.RaceId" class="countdown-timer"></span>
                        </div>
                    </div>
                    <div class="race-body">
                        @foreach (var horse in race.Horses)
                        {
                            <div class="horse-row">
                                <div class="horse-name">@horse.Name</div>
                                <div class="bet-options">
                                    <a href="#" class="bet-option" data-horse="@horse.Name" data-odds="@horse.WinnerOdds" data-bettype="Winner">
                                        <span class="bet-description">Winner</span>
                                        <span class="bet-odds" id="winner-odds-@race.RaceId-@horse.HorseId">@horse.WinnerOdds</span>
                                    </a>
                                    <a href="#" class="bet-option" data-horse="@horse.Name" data-odds="@horse.OtherOdds" data-bettype="1-3">
                                        <span class="bet-description">1-3</span>
                                        <span class="bet-odds" id="other-odds-@race.RaceId-@horse.HorseId">@horse.OtherOdds</span>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="tab-3" class="tab-content" data-tab="3" onclick="selectTab(3)">
        <div class="race-table">
            @foreach (var race in Model.Where(r => r.RaceId == 3))
            {
                <div class="race-card">
                    <div class="race-header">
                        <div class="race-location">
                            <span>@race.Horses.Count</span>
                            <img src="https://static.thenounproject.com/png/1324978-200.png" style="width:20px; height:20px;">
                            <button id="simulate-button-@race.RaceId" class="simulate-race-button" onclick="startSimulation(@race.RaceId, 3)">Simulate Race</button>
                            <span id="countdown-@race.RaceId" class="countdown-timer"></span>
                        </div>
                    </div>
                    <div class="race-body">
                        @foreach (var horse in race.Horses)
                        {
                            <div class="horse-row">
                                <div class="horse-name">@horse.Name</div>
                                <div class="bet-options">
                                    <a href="#" class="bet-option" data-horse="@horse.Name" data-odds="@horse.WinnerOdds" data-bettype="Winner">
                                        <span class="bet-description">Winner</span>
                                        <span class="bet-odds" id="winner-odds-@race.RaceId-@horse.HorseId">@horse.WinnerOdds</span>
                                    </a>
                                    <a href="#" class="bet-option" data-horse="@horse.Name" data-odds="@horse.OtherOdds" data-bettype="1-3">
                                        <span class="bet-description">1-3</span>
                                        <span class="bet-odds" id="other-odds-@race.RaceId-@horse.HorseId">@horse.OtherOdds</span>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="side-card right">
        <h4 style="color: black; text-align: center; font-size: 19px;">Your Bets</h4>
        <div id="bet-list"></div>
        <div class="betting-controls">
            <input type="text" class="bet-amount-input" placeholder="Bid zł" />
            <button class="place-bet-button">BET AND PLAY</button>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var tabs = document.querySelectorAll('.tab');
        var tabContents = document.querySelectorAll('.tab-content');
        var countdownIntervals = {}; // Store intervals for each race
        var raceSimulationsStarted = {}; // Track simulation status for each race

        tabs.forEach(function (tab) {
            tab.addEventListener('click', function () {
                tabs.forEach(function (t) { t.classList.remove('active'); });
                tab.classList.add('active');

                tabContents.forEach(function (tc) { tc.classList.remove('active'); });
                document.getElementById('tab-' + tab.getAttribute('data-tab')).classList.add('active');
            });
        });

        window.selectTab = function (tabId) { // Make the function available in the global scope
            tabs.forEach(function (t) { t.classList.remove('active'); });
            document.querySelector('.tab[data-tab="' + tabId + '"]').classList.add('active');

            tabContents.forEach(function (tc) { tc.classList.remove('active'); });
            document.getElementById('tab-' + tabId).classList.add('active');
        }

        window.startSimulation = function (raceId, tabId) { // Make the function available in the global scope
            var button = document.getElementById('simulate-button-' + raceId);
            var countdownElement = document.getElementById('countdown-' + raceId);
            if (!countdownElement) {
                countdownElement = document.createElement('span');
                countdownElement.id = 'countdown-' + raceId;
                countdownElement.classList.add('countdown-timer');
                button.parentNode.appendChild(countdownElement);
            }
            var time = 1 * 60; // 1 minute in seconds

            raceSimulationsStarted[raceId] = true; // Mark simulation as started

            // Clear any existing interval for this race
            if (countdownIntervals[raceId]) {
                clearInterval(countdownIntervals[raceId]);
            }

            countdownIntervals[raceId] = setInterval(function () {
                var minutes = Math.floor(time / 60);
                var seconds = time % 60;
                countdownElement.textContent = (minutes < 10 ? '0' : '') + minutes + ':' + (seconds < 10 ? '0' : '') + seconds;
                time--;

                if (time < 0) {
                    clearInterval(countdownIntervals[raceId]);
                    countdownElement.textContent = '00:00';
                    disableBetting(raceId, tabId);
                }
            }, 1000);

            // Start the race simulation
            fetch(`/Race/SimulateRace/${raceId}`, { method: 'POST' });
        }

        function disableBetting(raceId, tabId) {
            var betOptions = document.querySelectorAll('#tab-' + tabId + ' .bet-option');
            betOptions.forEach(function (option) {
                option.classList.add('disabled');
                option.onclick = function (event) {
                    event.preventDefault();
                };
            });

            // Disable the place bet button
            document.querySelector('.place-bet-button').classList.add('disabled');
            document.querySelector('.place-bet-button').onclick = function (event) {
                event.preventDefault();
            };
        }

        document.querySelectorAll('.simulate-race-button').forEach(function (button) {
            button.addEventListener('click', function () {
                var raceId = button.id.split('-')[2];
                var tabId = button.closest('.tab-content').id.split('-')[1];
                startSimulation(raceId, tabId); // Ensure the function is properly called
            });
        });

        var connection = new signalR.HubConnectionBuilder().withUrl("/raceHub").build(); // Corrected Hub endpoint

        connection.on("UpdateRace", function (raceId, race) {
            console.log("Received update for raceId:", raceId, "with data:", race);
            updateRaceDisplay(raceId, race);
        });

        function updateRaceDisplay(raceId, race) {
            console.log(`Updating display for raceId ${raceId} at ${new Date().toLocaleTimeString()}`);
            if (!race || !race.horses) {
                console.error(`No valid race data available for raceId: ${raceId}`);
                return;
            }

            var activeTabId = document.querySelector('.tab-content.active').getAttribute('data-tab');
            if (raceId.toString() === activeTabId) {
                race.horses.forEach(horse => {
                    var winnerOddsElement = document.getElementById(`winner-odds-${raceId}-${horse.horseId}`);
                    var otherOddsElement = document.getElementById(`other-odds-${raceId}-${horse.horseId}`);
                    if (winnerOddsElement && otherOddsElement) {
                        winnerOddsElement.textContent = horse.winnerOdds.toFixed(2);
                        otherOddsElement.textContent = horse.otherOdds.toFixed(2);
                    }
                });
            } 
        }

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        connection.on("RaceFinished", function (raceId, topThreeHorses) {
            if (document.getElementById('tab-' + raceId).classList.contains('active')) {
                var sideCardLeft = document.querySelector('.side-card.left');
                sideCardLeft.innerHTML = '<h3 style="color: black; text-align: center; font-size: 19px;">Results for Race ' + raceId + '</h3>';
                var list = document.createElement('ul');
                topThreeHorses.forEach(function (horse) {
                    var item = document.createElement('li');
                    item.textContent = horse;
                    list.appendChild(item);
                });
                sideCardLeft.appendChild(list);
            }
            console.log("Race finished. Winners: ", topThreeHorses);
        });


        document.querySelectorAll('.bet-option').forEach(function (option) {
            option.addEventListener('click', function (e) {
                e.preventDefault();
                var raceId = option.closest('.tab-content').querySelector('.simulate-race-button').id.split('-')[2];

                if (!raceSimulationsStarted[raceId]) {
                    alert("Race is not Simulated");
                    return;
                }

                var horseName = option.getAttribute('data-horse');
                var odds = option.getAttribute('data-odds');
                var betType = option.getAttribute('data-bettype');

                var betItem = `
                                <div class="bet-item">
                                    <div class="bet-details">
                                        <span>${horseName}</span>
                                        <span style="font-weight:bold;">${betType}</span>
                                    </div>
                                    <img src="https://png.pngtree.com/png-vector/20190326/ourmid/pngtree-vector-trash-icon-png-image_865253.jpg" class="trash-icon delete-bet" alt="Delete">
                                </div>`;

                document.getElementById('bet-list').insertAdjacentHTML('beforeend', betItem);
            });
        });

        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('delete-bet')) {
                e.target.closest('.bet-item').remove();
            }
        });

        document.querySelector('.place-bet-button').addEventListener('click', function (e) {
            if (e.target.classList.contains('disabled')) {
                e.preventDefault();
                alert('Betting is currently disabled for this race.');
                return;
            }

            var amount = document.querySelector('.bet-amount-input').value;
            if (!amount) {
                alert('Please enter a bet amount.');
                return;
            }

            var userName = '@User.Identity.Name';

            if (!userName) {
                window.location.href = '/Login';
                return;
            }

            var bets = [];
            $('#bet-list .bet-item').each(function () {
                var horseName = $(this).find('.bet-details span:first').text();
                var betType = $(this).find('.bet-details span:last').text();
                var odds = $(this).find('.bet-odds').text();
                bets.push({ HorseName: horseName, BetType: betType, Odds: odds });
            });

            if (bets.length === 0) {
                alert('Please add at least one bet.');
                return;
            }

            var raceId = $('.tab.active').data('tab'); // Get the actual raceId from the selected tab

            $.post('/Race/PlaceBet', { raceId: raceId, bets: bets, userName: userName, amount: amount }, function (data) {
                alert('Bet placed successfully.');
                $('#bet-list').empty();
                $('.bet-amount-input').val('');
            }).fail(function () {
                alert('Bet placed successfully.');
            });
        });
    });
</script>





